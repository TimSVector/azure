#
# The MIT License
#
# Copyright 2016 Vector Software, East Greenwich, Rhode Island USA
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#

trigger: none
  
variables:
  GIT_CLEAN_FLAGS: none
  
  # Relative path from checkout to the VectorCAST Project
  VC_Manage_Project: "Project.vcm"

  # Environment Setup Script
  VC_EnvSetup: "
    set VCAST_SRC_BASE=%CD%
    set path=%path%;c:/tools/gnat/2017/bin
    "

  # Using VectorCAST Continuous Integration (headless) licenses otherwise set to ""
  VC_UseCILicense: "set VCAST_USE_CI_LICENSES=TRUE"

  # Using VecteorCAST Change Based Testing otherwise set to ""
  VC_useCBT: "--incremental"

pool: VCAST

name: vectorcast

steps:
- script: |
    $(VC_UseCILicense)
    $(VC_EnvSetup)
    set VCAST_DEMO_SRC_BASE=%CD%\CurrentRelease
    set path=%path%;c:\vector\tools\gnat\2017\bin
    %VECTORCAST_DIR%\vpython.exe .\azure\vc_scripts\azure_exec.py "$(VC_Manage_Project)" $(VC_useCBT) --execute --metrics --reports
  displayName: 'VectorCAST Build-Execute'
  

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '$(System.DefaultWorkingDirectory)/xml_data/test_results*.xml'
    searchFolder: '$(System.DefaultWorkingDirectory)'
    testRunTitle: 'VectorCAST Test Results'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/xml_data/coverage_results*.xml'
    pathToSources: '$(System.DefaultWorkingDirectory)'
    reportDirectory: 'html_reports'
    failIfCoverageEmpty: false

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(System.DefaultWorkingDirectory)/complete_build.log'
    artifact: 'VectorCAST Complete Build Log'
    publishLocation: 'pipeline'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(System.DefaultWorkingDirectory)/html_reports'
    artifactName: 'VectorCAST HTML Reports'
    publishLocation: 'pipeline'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(System.DefaultWorkingDirectory)/xml_data'
    artifactName: 'Test and Code Coverage Results Files'
    publishLocation: 'pipeline'

